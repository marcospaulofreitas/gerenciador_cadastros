<div class="mb-2">
  <%= link_to webposto_dashboard_path, class: "btn btn-outline-secondary btn-sm" do %>
    <i class="fas fa-arrow-left me-1"></i>Voltar
  <% end %>
</div>
<div class="d-flex justify-content-between align-items-center mb-3">
  <h3 class="text-primary mb-0 text-center w-100">
    <i class="fas fa-store me-2"></i>Gerenciar Revendas
  </h3>
  <div class="position-absolute" style="right: 0;">
    <%= link_to new_revenda_path, class: "btn btn-outline-primary", 
        title: "Cadastrar nova revenda", data: { bs_toggle: "tooltip", bs_placement: "bottom" } do %>
      <i class="fas fa-plus me-1"></i>Nova
    <% end %>
  </div>
</div>

<!-- Filtros -->
<div class="card mb-2">
  <div class="card-body p-2">
    <div class="row g-2 align-items-center">
      <div class="col-6">
        <input type="text" id="search-input" class="form-control form-control-sm" 
               placeholder="Buscar por nome ou CNPJ..." 
               value="<%= params[:search] %>" style="font-size: 0.85rem; height: 32px;">
      </div>
      <div class="col-3">
        <select id="status-filter" class="form-select form-select-sm" style="font-size: 0.85rem; height: 32px;">
          <option value="todas" <%= 'selected' if params[:status].blank? || params[:status] == 'todas' %>>Todas</option>
          <option value="ativas" <%= 'selected' if params[:status] == 'ativas' %>>Ativas</option>
          <option value="inativas" <%= 'selected' if params[:status] == 'inativas' %>>Inativas</option>
        </select>
      </div>
      <div class="col-3">
        <button type="button" id="clear-filters" class="btn btn-outline-secondary btn-sm w-100" style="font-size: 0.85rem; height: 32px;">
          <i class="fas fa-times"></i> Limpar
        </button>
      </div>
    </div>
  </div>
</div>

<div class="card floating-card">
  <div class="card-body p-3" id="revendas-table">
    <%= render 'table', revendas: @revendas %>
  </div>
</div>

<!-- Modal de Confirmação -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content">
      <div class="modal-header border-0">
        <h5 class="modal-title" id="confirmModalTitle">Confirmar Ação</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body text-center py-4">
        <div class="mb-3">
          <i id="confirmIcon" class="fas fa-question-circle fa-3x text-warning"></i>
        </div>
        <p id="confirmMessage" class="mb-0 fs-5"></p>
      </div>
      <div class="modal-footer border-0 justify-content-center">
        <div class="d-flex gap-2">
          <button type="button" class="btn btn-primary btn-sm" id="confirmButton" style="width: 90px; font-size: 0.75rem; text-align: center; padding: 4px 8px;">Confirmar</button>
          <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal" style="width: 90px; font-size: 0.75rem; text-align: center; padding: 4px 8px;">Cancelar</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function initFilters() {
  const searchInput = document.getElementById('search-input');
  const statusFilter = document.getElementById('status-filter');
  const clearButton = document.getElementById('clear-filters');
  
  if (!searchInput) return;
  
  let searchTimeout;

  function applyFilters() {
    const search = searchInput.value;
    const status = statusFilter.value;
    const tableContainer = document.getElementById('revendas-table');
    
    const params = new URLSearchParams();
    if (search) params.set('search', search);
    if (status && status !== 'todas') params.set('status', status);
    
    fetch(window.location.pathname + '?' + params.toString(), {
      method: 'GET',
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
        'Accept': 'text/html'
      }
    })
    .then(response => response.text())
    .then(html => {
      tableContainer.innerHTML = html;
    })
    .catch(error => {
      console.error('Erro ao filtrar:', error);
    });
  }

  searchInput.addEventListener('input', function() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(applyFilters, 500);
  });

  statusFilter.addEventListener('change', applyFilters);

  clearButton.addEventListener('click', function() {
    searchInput.value = '';
    statusFilter.value = 'todas';
    applyFilters();
  });
}

// Handler para toggle status com modal
document.addEventListener('click', function(e) {
  if (e.target.closest('.toggle-revenda-btn')) {
    e.preventDefault();
    const btn = e.target.closest('.toggle-revenda-btn');
    const revendaId = btn.dataset.revendaId;
    const action = btn.dataset.action;
    
    // Configurar modal
    const modal = new bootstrap.Modal(document.getElementById('confirmModal'));
    const confirmButton = document.getElementById('confirmButton');
    const confirmMessage = document.getElementById('confirmMessage');
    const confirmIcon = document.getElementById('confirmIcon');
    
    // Personalizar modal baseado na ação
    if (action === 'desativar') {
      confirmMessage.textContent = 'Tem certeza que deseja desativar esta revenda?';
      confirmIcon.className = 'fas fa-exclamation-triangle fa-3x text-warning';
      confirmButton.className = 'btn btn-primary';
      confirmButton.textContent = 'Confirmar';
    } else {
      confirmMessage.textContent = 'Tem certeza que deseja ativar esta revenda?';
      confirmIcon.className = 'fas fa-check-circle fa-3x text-success';
      confirmButton.className = 'btn btn-primary';
      confirmButton.textContent = 'Confirmar';
    }
    
    // Remover listeners anteriores e adicionar novo
    const newConfirmButton = confirmButton.cloneNode(true);
    confirmButton.parentNode.replaceChild(newConfirmButton, confirmButton);
    
    newConfirmButton.addEventListener('click', function() {
      // Fazer requisição
      fetch(`/revendas/${revendaId}/toggle_status`, {
        method: 'PATCH',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Accept': 'application/json'
        }
      })
      .then(response => {
        modal.hide();
        if (response.ok) {
          return response.json();
        } else {
          throw new Error('Erro na requisição');
        }
      })
      .then(data => {
        if (data.success) {
          location.reload();
        } else {
          alert('Erro ao alterar status da revenda');
        }
      })
      .catch(error => {
        modal.hide();
        console.error('Erro:', error);
        alert('Erro ao alterar status da revenda');
      });
    });
    
    modal.show();
  }
});

document.addEventListener('DOMContentLoaded', initFilters);
document.addEventListener('turbo:load', initFilters);
</script>